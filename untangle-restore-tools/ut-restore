#!/bin/sh

if [ $# -gt 0 ] ; then
    # this is for started from init.d
    FLAG=1 # reboot after quit
else
    # this is for started from X
    FLAG=0 # start mvvm after quit
fi

reboot() {
    echo Reboot
    /sbin/shutdown -r now
}

quit() {
    echo Quit
    if [ -x /etc/init.d/mvvm ] ; then
        /etc/init.d/mvvm start
    fi
    exit
}

if [ $FLAG -eq 1 ] ; then
    trap reboot 6
    trap reboot 15
    trap reboot 2
else
    trap quit 6
    trap quit 15
    trap quit 2
fi


INST_OPTS=" -o DPkg::Options::=--force-confnew --yes --force-yes --fix-broken "
UPGD_OPTS=" -o DPkg::Options::=--force-confnew --yes --force-yes --fix-broken "
tmpfile=$(tempfile)
backtitle="Untangle Platform"

confirm_exit()
{
    dialog --backtitle "$backtitle" --title "Confirm" \
        --yesno "Are you sure you wish to exit?" 6 52

    case $? in
        0) # yes
            state=END_STATE
            ;;
        1) # no
            state=MAIN_MENU
            ;;
    esac
}

confirm()
{
    dialog --backtitle "$backtitle" --title "Confirm" \
        --defaultno --yesno "$1" 6 52
}

success_splash()
{
    dialog --backtitle "$backtitle" --title "Complete" \
        --msgbox "Settings Applied" 10 61

    state=MAIN_MENU
}

factory_success_splash()
{
    FLAG=1
    dialog --backtitle "$backtitle" --title "Complete" \
        --msgbox "Factory settings restored. The Untangle Server will now reboot." 10 61

    state=END_STATE
}

support_menu()
{
    dialog --backtitle "$backtitle" --title "Untangle Platform Support" \
        --menu "Choose operation:" 10 61 2 \
        "Enable Remote Support" "" \
        "Disable Remote Support" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Enable Remote Support")
                    /etc/init.d/ssh start &> /dev/null
                    update-rc.d ssh defaults &> /dev/null
                    state=SUCCESS_SPLASH
                    ;;
                "Disable Remote Support")
                    /etc/init.d/ssh stop &> /dev/null
                    mv /etc/init.d/ssh /etc/init.d/ssh.tmp &> /dev/null
                    update-rc.d ssh remove &> /dev/null
                    mv /etc/init.d/ssh.tmp /etc/init.d/ssh &> /dev/null
                    state=SUCCESS_SPLASH
                    ;;
                *)
                    echo "Invalid Option: $choice"
                    cat $tmpfile
                    exit
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

upgrade_menu()
{
    dialog --backtitle "$backtitle" --title "Untangle Platform Upgrade" \
        --menu "Choose operation:" 10 61 3 \
        "Upgrade Untangle Platform" "" \
        "Resume Halted Upgrade" "" \
        "Fix Halted Upgrade" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Upgrade Untangle Platform")
                    apt-get dist-upgrade $UPGD_OPTS
                    /etc/init.d/mvvm stop
                    state=SUCCESS_SPLASH
                    ;;
                "Resume Halted Upgrade")
                    dpkg --configure -a
                    state=SUCCESS_SPLASH
                    ;;
                "Fix Halted Upgrade")
                    apt-get -f install $INST_OPTS
                    state=SUCCESS_SPLASH
                    ;;
                *)
                    echo "Invalid Option: $choice"
                    cat $tmpfile
                    exit
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

main_menu()
{
    dialog --backtitle "$backtitle" --title "Untangle Platform Recovery" \
        --cancel-label "Exit" \
        --menu "Choose operation:" 10 61 3 \
        "Backup & Restore" "" \
        "Return to Factory Defaults" "" \
        "Reset Administrative Accounts" "" \
        "Upgrade Untangle Platform" "" \
        "Remote Support" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Backup & Restore")
                    if [ -x /usr/bin/uvmdb-restore ] ; then
                        /usr/bin/uvmdb-restore
                    fi
                    state=MAIN_MENU
                    ;;
                "Return to Factory Defaults")
                    if confirm "Return all settings to factory defaults?"; then
                        factory-defaults
                        state=FACTORY_SUCCESS_SPLASH
                    else
                        state=MAIN_MENU
                    fi
                    ;;
                "Reset Administrative Accounts")
                    if confirm "Reset administrative accounts to factory defaults (admin/passwd)?"; then
                        psql -X -U postgres mvvm >/dev/null <<EOF
DELETE FROM mvvm_user;
DELETE FROM admin_settings;
EOF
                        state=SUCCESS_SPLASH
                    else
                        state=MAIN_MENU
                    fi
                    ;;
                "Upgrade Untangle Platform")
                    state=UPGRADE_MENU
                    ;;
                "Remote Support")
                    state=SUPPORT_MENU
                    ;;
            esac
            ;;
        1) # Cancel
            state=CONFIRM_EXIT
            ;;
    esac
}

# Stop the mvvm
if [ -x /etc/init.d/mvvm ] ; then
    /etc/init.d/mvvm stop
fi

state=MAIN_MENU
while true; do
    case $state in
# Main levels
        MAIN_MENU)
            main_menu
            ;;
# Sub levels
        UPGRADE_MENU)
            upgrade_menu
            ;;
        SUPPORT_MENU)
            support_menu
            ;;
# Messages
        FACTORY_SUCCESS_SPLASH)
            factory_success_splash
            ;;
        SUCCESS_SPLASH)
            success_splash
            ;;
# Exit levels
        CONFIRM_EXIT)
            confirm_exit
            ;;
        END_STATE)
            if [ $FLAG -eq 1 ] ; then
                reboot
                exit
            else
                quit
            fi
            ;;
        *)
            echo "no such state: $state"
            exit
    esac
done

