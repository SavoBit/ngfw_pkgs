#! /bin/bash

ourInit() {
if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
  invoke-rc.d $1 $2
else
  /etc/init.d/$1 $2
fi
}

if [ -f /etc/untangle/oem/oem.sh ] ; then
    source /etc/untangle/oem/oem.sh
fi

if [ $# -gt 0 ] ; then
    # this is for started from init.d
    REBOOT_ON_EXIT=1 # reboot after quit
else
    # this is for started from X
    REBOOT_ON_EXIT=0 # start uvm after quit
fi

reboot() {
    echo Reboot
    /sbin/shutdown -r now
}

quit() {
    echo Quit
    
    if [ -x /etc/init.d/apache2 ]; then
        ourInit apache2 restart
    fi

    if [ -x /etc/init.d/untangle-vm ] ; then
        ourInit untangle-vm start
    fi

    exit
}

stop_services()
{
    if [ -x /etc/init.d/untangle-vm ]; then
        ourInit untangle-vm stop
    fi
    
    if [ -x /etc/init.d/apache2 ]; then
        ourInit apache2 stop
    fi
}

if [ $REBOOT_ON_EXIT -eq 1 ] ; then
    trap reboot 6
    trap reboot 15
    trap reboot 2
else
    trap quit 6
    trap quit 15
    trap quit 2
fi


INST_OPTS=" -o DPkg::Options::=--force-confnew --yes --force-yes --fix-broken "
UPGD_OPTS=" -o DPkg::Options::=--force-confnew --yes --force-yes --fix-broken "
tmpfile=$(tempfile)
backtitle="$OEM_NAME"
height="12"
width="61"

confirm_exit()
{
    dialog --backtitle "$backtitle" --title "Confirm" \
        --yesno "Are you sure you wish to exit?" 6 52

    case $? in
        0) # yes
            state=END_STATE
            ;;
        1) # no
            state=MAIN_MENU
            ;;
    esac
}

confirm()
{
    dialog --backtitle "$backtitle" --title "Confirm" --defaultno --yesno "$1" 6 52
}

success_splash()
{
    dialog --backtitle "$backtitle" --title "Complete" --msgbox "Settings Applied" $height $width

    state=MAIN_MENU
}

factory_success_splash()
{
    REBOOT_ON_EXIT=1
    dialog --backtitle "$backtitle" --title "Complete" --msgbox "Factory settings restored. The server will now reboot." $height $width

    state=END_STATE
}

factory_fail_splash()
{
    dialog --backtitle "$backtitle" --title "Warning" --msgbox "Unable to return to Factory Defaults, Please try again." $height $width

    state=MAIN_MENU
}

support_menu()
{
    dialog --backtitle "$backtitle" --title "Support" \
        --menu "Choose operation:" $height $width 3 \
        "Enable Remote Support" "" \
        "Disable Remote Support" "" \
        "Display UID" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Enable Remote Support")
                    if [ -f /usr/share/untangle/settings/untangle-vm/system.js ] ; then
                        sed -e 's/\"supportEnabled\": false/\"supportEnabled\": true/' -i /usr/share/untangle/settings/untangle-vm/system.js
                    fi
                    ourInit untangle-pyconnector restart
                    state=SUCCESS_SPLASH
                    ;;
                "Disable Remote Support")
                    if [ -f /usr/share/untangle/settings/untangle-vm/system.js ] ; then
                        sed -e 's/\"supportEnabled\": true/\"supportEnabled\": false/' -i /usr/share/untangle/settings/untangle-vm/system.js
                    fi
                    ourInit untangle-pyconnector restart
                    state=SUCCESS_SPLASH
                    ;;
                "Display UID")
                    if [ -f /usr/share/untangle/conf/uid ] ; then cat /usr/share/untangle/conf/uid ; else echo "No UID" ; fi
                    dialog --backtitle "$backtitle" --title "UID" --msgbox "`cat /usr/share/untangle/conf/uid`" $height $width
                    state=MAIN_MENU
                    ;;
                *)
                    echo "Invalid Option: $choice"
                    cat $tmpfile
                    exit
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

upgrade_menu()
{
    dialog --backtitle "$backtitle" --title "Upgrade" \
        --menu "Choose operation:" $height $width 3 \
        "Upgrade" "" \
        "Resume Halted Upgrade" "" \
        "Fix Halted Upgrade" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Upgrade")
                    apt-get dist-upgrade $UPGD_OPTS
                    stop_services
                    state=SUCCESS_SPLASH
                    ;;
                "Resume Halted Upgrade")
                    dpkg --configure -a
                    state=SUCCESS_SPLASH
                    ;;
                "Fix Halted Upgrade")
                    apt-get -f install $INST_OPTS
                    state=SUCCESS_SPLASH
                    ;;
                *)
                    echo "Invalid Option: $choice"
                    cat $tmpfile
                    exit
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

main_menu()
{
    dialog --backtitle "$backtitle" --title "Recovery" \
        --cancel-label "Exit" \
        --menu "Choose operation:" $height $width 4 \
        "Return to Factory Defaults" "" \
        "Reset Administration Accounts" "" \
        "Upgrade" "" \
        "Remote Support" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Return to Factory Defaults")
                    if confirm "Return all settings to factory defaults?"; then
                        /usr/share/untangle/bin/factory-defaults  >> /var/log/uvm/factory-defaults.log 2>&1
                        if [ $? -eq 0 ]; then
                            state=FACTORY_SUCCESS_SPLASH
                        else
                            state=FACTORY_FAIL_SPLASH
                        fi
                    else
                        state=MAIN_MENU
                    fi
                    ;;
                "Reset Administration Accounts")
                    if confirm "Reset adminstration login (to admin/passwd)?"; then
                        rm -f /usr/share/untangle/settings/untangle-vm/admin.js
                        state=SUCCESS_SPLASH
                    else
                        state=MAIN_MENU
                    fi
                    ;;
                "Upgrade")
                    state=UPGRADE_MENU
                    ;;
                "Remote Support")
                    state=SUPPORT_MENU
                    ;;
            esac
            ;;
        1) # Cancel
            state=CONFIRM_EXIT
            ;;
    esac
}

# Stop the uvm
stop_services

state=MAIN_MENU
while true; do
    case $state in
# Main levels
        MAIN_MENU)
            main_menu
            ;;
# Sub levels
        UPGRADE_MENU)
            upgrade_menu
            ;;
        SUPPORT_MENU)
            support_menu
            ;;
# Messages
        FACTORY_SUCCESS_SPLASH)
            factory_success_splash
            ;;
        FACTORY_FAIL_SPLASH)
	    factory_fail_splash
            ;;
        SUCCESS_SPLASH)
            success_splash
            ;;
# Exit levels
        CONFIRM_EXIT)
            confirm_exit
            ;;
        END_STATE)
            if [ $REBOOT_ON_EXIT -eq 1 ] ; then
                reboot
                exit
            else
                quit
            fi
            ;;
        *)
            echo "no such state: $state"
            exit
    esac
done

