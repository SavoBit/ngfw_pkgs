
READ "UPGRADE" IF YOU ARE UPGRADING FROM A PREVIOUS VERSION

sa-update
---------

This package includes a script called "sa-update" that will download
the latest set of rules distributed by upstream. This is currently a
manual process, as it is still quite new. To update your rules, run
the following as root:

# sa-update

This will download the latest set of rules to a directory under
/var/lib/untangle-spamassassin/

Trusted Networks
----------------

SpamAssassin has a built in guessing algorithm to determine which
Received headers in a message are trustworthy and which are not. You
should ensure that the configuration option trusted_networks and
internal_networks are set correctly, especially if you are
experiencing false positives from tests referring to Received headers.

Please read man Mail::SpamAssassin::Conf for more information on this.

Other modules
-------------

It is recommended that you install libnet-dns-perl and
libmail-spf-query-perl to take full advantage of SpamAssassin's
heuristic rules. Other modules can also be useful, see "Plugins"
below.

Specifically, network tests, which tend to be very good, require
libnet-dns-perl.

Plugins
-------

As of version 3.1.0, much of the functionality in SpamAssassin
relating to external programs and perl modules has been removed and
placed in plugins. For example, Razor, DCC and Pyzor have been
"pluginized".

Plugins can be enabled and disabled in /etc/untangle-spamassassin/init.pre and
/etc/untangle-spamassassin/v310.pre. You may wish to read through those files
to see which plugins you might want to install. In general, plugins
may have dependencies that you may need to install for them to
function. For example, the Razor2 plugin requires that you install
razor. You should read the manpage before enabling a plugin.

Please note that Razor and DCC have been disabled by default as they
are no longer free for patent reasons.

Configuring spamd
-----------------

spamd, the daemonized form of untangle-spamassassin, is generally the preferred
way of running untangle-spamassassin. Please read man spamd and README.spamd
for more information. Init scripts are provided with this package in
/etc/init.d/untangle-spamassassin. To change the command line options, please
edit /etc/default/untangle-spamassassin.

If you intend to use Bayes sitewide, it is recommended that you set up
an SQL-based Bayes storage module. (You may also want to store scores
and other prefences in SQL too.) Please read the documentation in
/usr/share/doc/untangle-spamassassin/sql/ for more information.

Please note that SQL storage is not very private -- anyone that has
access to the database can read and write it freely, meaning users
could corrupt other users' Bayes databases.

Please note that the --auth-ident option does not work with pidentd or
gidentd. See http://bugs.debian.org/278030 for more information.

Poor Performance
----------------

If you experience poor performance with spamd, please ensure that you
have not set the --max-children option too high. spamd now uses a
"Apache httpd style scaling" algorithm to prefork children, so these
child will always be present. Please note also that there seems to be
a bug with respect to how memory usage is reported by the kernel to
programs such as top. Multiple spamd children share much more memory
than is indicated.

One common problem with spamd is that load spikes whenever the Bayes
database needs to be sync'd. This is especially true right after an
upgrade. It's often a good idea to do this manually right after you
upgrade with the command: sa-learn --sync for each user/Bayes DB. (You
can use the --dbpath option to specify the database path)

You can also disable automatic expiry by setting the
"bayes_auto_expire 0" option in your configuration and running
sa-learn --force-expire from a cronjob. See
http://wiki.untangle-spamassassin.org/BayesForceExpire

Mail stream integration
-----------------------

Please read README for instructions on setting up SpamAssassin into
your mail stream. There is also a very incomplete set of examples in
the examples/ directory. More examples are welcome! Please file a bug
against untangle-spamassassin with the minor or wishlist severity and attach a
file or patch.

There is a large amount of information on setting untangle-spamassassin up with
your mail system at
http://wiki.apache.org/untangle-spamassassin/UsingSpamAssassin.

Configuration Files
-------------------

To add rules, change scores or edit the report template, edit
/etc/untangle-spamassassin/local.cf. Please don't touch the files in
/usr/share/untangle-spamassassin, as you will NOT be prompted to overwrite them
on upgrade. Configuration file details are available in the
Mail::SpamAssassin::Conf(3) man page.

User-specific configuration is the automatically created
~/.untangle-spamassassin/user_prefs, which is copied from
/etc/untangle-spamassassin/user_prefs.template. It is automatically created
whenever untangle-spamassassin is called, or when spamc is used with 'spamd
-c'.

Non-free RBLs
-------------

By default, untangle-spamassassin checks certain free RBLs. Other, commercial
RBLs can easily be enabled. See the README for more
information. Furthermore, SpamAssassin supports using third-party
programs Razor, DCC and Pyzor, but Razor and DCC are disabled by
default since they are not free for non-personal use. Feel free to
enable them in /etc/untangle-spamassassin/init.pre

 -- Duncan Findlay <duncf@debian.org>, Mon, 19 Jun 2006 01:01:44 -0400
