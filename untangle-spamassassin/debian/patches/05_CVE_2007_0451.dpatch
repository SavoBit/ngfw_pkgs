#! /bin/sh /usr/share/dpatch/dpatch-run
## 05_CVE_2007_0451.dpatch by Duncan Findlay <duncf@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad untangle-spamassassin~/lib/Mail/SpamAssassin/Constants.pm untangle-spamassassin/lib/Mail/SpamAssassin/Constants.pm
--- untangle-spamassassin~/lib/Mail/SpamAssassin/Constants.pm	2006-10-04 10:01:16.000000000 -0400
+++ untangle-spamassassin/lib/Mail/SpamAssassin/Constants.pm	2007-02-14 22:06:59.000000000 -0500
@@ -38,6 +38,7 @@
 	META_TEST_MIN_PRIORITY HARVEST_DNSBL_PRIORITY MBX_SEPARATOR
 	MAX_BODY_LINE_LENGTH MAX_HEADER_KEY_LENGTH MAX_HEADER_VALUE_LENGTH
 	MAX_HEADER_LENGTH ARITH_EXPRESSION_LEXER AI_TIME_UNKNOWN
+	MAX_URI_LENGTH
 );
 
 %EXPORT_TAGS = (
@@ -283,6 +284,9 @@
 # maximum byte length of entire header
 use constant MAX_HEADER_LENGTH => 65536;
 
+# maximum byte length of any given URI
+use constant MAX_URI_LENGTH => 1024;
+
 # used for meta rules and "if" conditionals in Conf::Parser
 use constant ARITH_EXPRESSION_LEXER => qr/(?:
         [\-\+\d\.]+|                            # A Number
diff -urNad untangle-spamassassin~/lib/Mail/SpamAssassin/EvalTests.pm untangle-spamassassin/lib/Mail/SpamAssassin/EvalTests.pm
--- untangle-spamassassin~/lib/Mail/SpamAssassin/EvalTests.pm	2006-10-04 10:01:16.000000000 -0400
+++ untangle-spamassassin/lib/Mail/SpamAssassin/EvalTests.pm	2007-02-14 22:06:59.000000000 -0500
@@ -3167,4 +3167,9 @@
   return 0;
 }
 
+sub check_uri_truncated {
+  my $self = shift;
+  return $self->{'uri_truncated'};
+}
+ 
 1;
diff -urNad untangle-spamassassin~/lib/Mail/SpamAssassin/HTML.pm untangle-spamassassin/lib/Mail/SpamAssassin/HTML.pm
--- untangle-spamassassin~/lib/Mail/SpamAssassin/HTML.pm	2006-10-04 10:01:16.000000000 -0400
+++ untangle-spamassassin/lib/Mail/SpamAssassin/HTML.pm	2007-02-14 22:06:59.000000000 -0500
@@ -26,6 +26,7 @@
 
 use HTML::Parser 3.24 ();
 use Mail::SpamAssassin::Logger;
+use Mail::SpamAssassin::Constants qw(:sa);
 
 use vars qw($re_loose $re_strict $re_other @ISA @EXPORT @EXPORT_OK);
 
@@ -143,6 +144,7 @@
   $self->put_results(anchor => $self->{anchor});
 
   $self->put_results(uri_detail => $self->{uri});
+  $self->put_results(uri_truncated => $self->{uri_truncated});
 
   # final results scalars
   $self->put_results(image_area => $self->{image_area});
@@ -359,9 +361,7 @@
 sub push_uri {
   my ($self, $type, $uri) = @_;
 
-  # URIs don't have leading/trailing whitespace ...
-  $uri =~ s/^\s+//;
-  $uri =~ s/\s+$//;
+  $uri = $self->canon_uri($uri);
 
   my $target = target_uri($self->{base_href} || "", $uri);
 
@@ -371,6 +371,22 @@
   }
 }
 
+sub canon_uri {
+  my ($self, $uri) = @_;
+
+  # URIs don't have leading/trailing whitespace ...
+  $uri =~ s/^\s+//;
+  $uri =~ s/\s+$//;
+
+  # Make sure all the URIs are nice and short
+  if (length $uri > MAX_URI_LENGTH) {
+    $self->{'uri_truncated'} = 1;
+    $uri = substr $uri, 0, MAX_URI_LENGTH;
+  }
+
+  return $uri;
+}
+
 sub html_uri {
   my ($self, $tag, $attr) = @_;
 
@@ -397,6 +413,8 @@
   }
   elsif ($tag eq "base") {
     if (my $uri = $attr->{href}) {
+      $uri = $self->canon_uri($uri);
+
       # use <BASE HREF="URI"> to turn relative links into absolute links
 
       # even if it is a base URI, handle like a normal URI as well
@@ -690,7 +708,7 @@
 
   # special text delimiters - <a> and <title>
   if ($tag eq "a") {
-    $self->{anchor_last} = (exists $attr->{href} ? $attr->{href} : "");
+    $self->{anchor_last} = (exists $attr->{href} ? $self->canon_uri($attr->{href}) : "");
     push(@{$self->{uri}->{$self->{anchor_last}}->{anchor_text}}, '');
     push(@{$self->{anchor}}, '');
   }
diff -urNad untangle-spamassassin~/lib/Mail/SpamAssassin/PerMsgStatus.pm untangle-spamassassin/lib/Mail/SpamAssassin/PerMsgStatus.pm
--- untangle-spamassassin~/lib/Mail/SpamAssassin/PerMsgStatus.pm	2006-10-04 10:01:16.000000000 -0400
+++ untangle-spamassassin/lib/Mail/SpamAssassin/PerMsgStatus.pm	2007-02-14 22:06:59.000000000 -0500
@@ -2009,6 +2009,7 @@
   # get URIs from HTML parsing
   # use the metadata version since $self->{html} may not be setup
   my $detail = $self->{msg}->{metadata}->{html}->{uri_detail} || { };
+  $self->{'uri_truncated'} = 1 if $self->{msg}->{metadata}->{html}->{uri_truncated};
 
   # don't keep dereferencing ...
   my $redirector_patterns = $self->{conf}->{redirector_patterns};
@@ -2146,6 +2147,14 @@
       }
     }
 
+    # Make sure all the URIs are nice and short
+    foreach my $uri ( @uris ) {
+      if (length $uri > MAX_URI_LENGTH) {
+        $self->{'uri_truncated'} = 1;
+        $uri = substr $uri, 0, MAX_URI_LENGTH;
+      }
+    }
+
     # setup the cache and return
     $self->{parsed_uri_list} = \@uris;
   }
diff -urNad untangle-spamassassin~/rules/20_body_tests.cf untangle-spamassassin/rules/20_body_tests.cf
--- untangle-spamassassin~/rules/20_body_tests.cf	2006-09-29 09:06:41.000000000 -0400
+++ untangle-spamassassin/rules/20_body_tests.cf	2007-02-14 22:06:59.000000000 -0500
@@ -148,3 +148,6 @@
 describe INTERRUPTUS          Message looks to contain HTML-interrupted text
 
 body MULTIPART_ALT_NON_TEXT     eval:check_ma_non_text()
+
+body URI_TRUNCATED	eval:check_uri_truncated()
+describe URI_TRUNCATED	Message contained a URI which was truncated
