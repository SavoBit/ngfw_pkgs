#!/bin/sh

debug()
{
    /bin/echo -e "[NETD    DEBUG: `date`] ${*}"
}

debug_ip()
{
    debug ip $*
    ip $*
}

debug_run_parts()
{
    debug run-parts $*
    run-parts -v $*
}


networking_pre_restart_hook()
{
    $DEBUG "networking_pre_restart_hook"
    $RUN_PARTS /etc/untangle-netd/pre-network-hook.d
    return 0
}

netd_v6_address()
{
    if [ -n "${IF_NETD_V6_ADDRESS}" ] ; then
        if [ "disabled" = "${IF_NETD_V6_ADDRESS}" ] ; then
            # disable IPv6
            echo 1 > /proc/sys/net/ipv6/conf/$IFACE/disable_ipv6
        elif [ "auto" = "${IF_NETD_V6_ADDRESS}" ] ; then
            echo 0 > /proc/sys/net/ipv6/conf/$IFACE/disable_ipv6
            # force kernel router solicitation now
            if [ -x /bin/rdisc6 ] ; then
                rdisc6 $IFACE
            else
                echo "FIXME missing rdisc6"
            fi
        elif [ -n "${IF_NETD_V6_PREFIX}" ] ; then
            echo 0 > /proc/sys/net/ipv6/conf/$IFACE/disable_ipv6
            ip -6 addr add ${IF_NETD_V6_ADDRESS}/${IF_NETD_V6_PREFIX} dev $IFACE
        fi
    fi

    return 0
}

netd_v4_address()
{
    #$DEBUG "netd_v4_address: IF_NETD_V4_ADDRESS = ${IF_NETD_V4_ADDRESS}"
    #$DEBUG "netd_v4_address: IF_NETD_V4_NETMASK = ${IF_NETD_V4_NETMASK}"
    #$DEBUG "netd_v4_address: IF_NETD_V4_GATEWAY = ${IF_NETD_V4_GATEWAY}"

    if [ -n "${IF_NETD_V4_ADDRESS}" ] && [ -n "${IF_NETD_V4_NETMASK}" ]; then
        #$DEBUG ifconfig $IFACE ${IF_NETD_V4_ADDRESS} netmask ${IF_NETD_V4_NETMASK} up
        ifconfig $IFACE ${IF_NETD_V4_ADDRESS} netmask ${IF_NETD_V4_NETMASK} up
    fi

    return 0
}

networking_post_restart_hook()
{
    $DEBUG "networking_post_restart_hook"
    $RUN_PARTS /etc/untangle-netd/post-network-hook.d
    return 0
}

uplink_routes()
{
    local table_name

    [ -z "$IF_NETD_INTERFACE_INDEX" ] && {
        # aliases don't have interface_index, just return
        #$DEBUG "Interface ${IFACE} is missing the interface index."
        return 0
    }

    if [ -n "$IF_NETD_V4_GATEWAY" ] ; then
        table_name="uplink.${IF_NETD_INTERFACE_INDEX}"
        /usr/share/untangle-netd/bin/add-uplink.sh ${IFACE} ${IF_NETD_V4_GATEWAY} ${table_name}
    fi

    if [ -n "$IF_NETD_V6_GATEWAY" ] ; then
        table_name="uplink.${IF_NETD_INTERFACE_INDEX}"
        /usr/share/untangle-netd/bin/add-uplink.sh ${IFACE} ${IF_NETD_V6_GATEWAY} ${table_name}
    fi
}

write_status_file()
{
    local t_interface="$1"
    local t_index="$2"
    ( [ -z "$t_interface" ] || [ -z "$t_index" ] ) && {
        return 0
    }
    
    $DEBUG "writing /var/lib/untangle-netd/interface-${t_index}-status.js"
    /usr/share/untangle-netd/bin/write-interface-status.py -I ${t_interface} -i ${t_index} -w /var/lib/untangle-netd/interface-${t_index}-status.js

    $DEBUG "writing /var/lib/untangle-netd/interface-${t_interface}-status.js"
    /usr/share/untangle-netd/bin/write-interface-status.py -I ${t_interface} -i ${t_index} -w /var/lib/untangle-netd/interface-${t_interface}-status.js
}

## Start of script

#DEBUG=/bin/true
#IP="ip"
#RUN_PARTS="run-parts"

DEBUG="debug"
IP="debug_ip"
RUN_PARTS="debug_run_parts"

$DEBUG "if-up.d start [$IFACE]"

if [ "$IFACE" = "networking_pre_restart_hook" ] ; then
    networking_pre_restart_hook
    $DEBUG "if-up.d end   [$IFACE]"
    exit 0
fi

if [ "$IFACE" = "networking_post_restart_hook" ] ; then
    networking_post_restart_hook
    $DEBUG "if-up.d end   [$IFACE]"
    exit 0
fi

netd_v4_address

netd_v6_address

uplink_routes

write_status_file $IFACE $IF_NETD_INTERFACE_INDEX

$DEBUG "if-up.d end   [$IFACE]"

## always exit 0
exit 0
