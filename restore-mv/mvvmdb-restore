#!/bin/sh

LOCAL_DUMP=/usr/share/metavize/dump
mkdir -p $LOCAL_DUMP

tmpfile=$(tempfile)
backtitle="Untangle Platform"


confirm_exit()
{
    dialog --backtitle "$backtitle" --title "Cancel" \
        --yesno "Cancel Backup/Restore?" 6 52

    case $? in
        0) # yes
            state=END_STATE
            ;;
        1) # no
            state=MAIN_MENU
            ;;
    esac
}

confirm()
{
    dialog --backtitle "$backtitle" --title "Confirm" \
        --yesno "$1" 6 52
}

usb_mount()
{
    dialog --backtitle "$backtitle" --title "Insert USB Key" \
        --yes-label "OK" --no-label "Cancel" \
        --yesno "Please click OK after inserting USB key." 6 52
    retval=$?

    case $retval in
        0) # OK
            mount /dev/sda1 /mnt
            ;;
        1) # Cancel
            return 1
            ;;
    esac

    if mount | cut -f1 -d' ' | grep '/dev/sda1' >/dev/null 2>&1; then
        return 0
    else
        dialog --backtitle "$backtitle" \
            --title "USB Key Mount error" \
            --msgbox "Please check that the USB key is inserted properly and properly formatted." 6 52
        return -1
    fi
}

restore()
{
    indir=$1

    filelist=""
    for f in $(ls $indir/mvvmdb-*.gz | sort -r 2> /dev/null); do
        d=$(echo $f | sed 's|^.*/mvvmdb-\([0-9]\+\)\.gz$|\1|')
        filelist="$filelist $d $(ls -hl $f | cut -d' ' -f6 2>/dev/null) "
        toggle=off
    done

    if [ -z $filelist ]; then
        dialog --backtitle "$backtitle" \
            --title "Error" \
            --msgbox "No backup images found" 6 52
        return 100
    fi

    dialog --backtitle "$backtitle" --title "Restore Settings" \
        --menu "Select settings" 10 61 5 $filelist 2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)

    case $retval in
        0) # OK
            dumpfile=$indir/mvvmdb-$choice.gz
            tarfile=$indir/files-$choice.tar.gz
            instfile=$indir/installed-$choice

            # restore choice
            /usr/bin/restore-mv $dumpfile $tarfile $instfile

            # restore-mv might restart MVVM, stop it
            /etc/init.d/mvvm stop

            return $?
            ;;
        1) # Cancel
            return -1
            ;;
    esac
}

backup()
{
    outdir=$1

    datestamp=$(date '+%Y%m%d%H%M')
    dumpfile=$outdir/mvvmdb-$datestamp.gz
    tarfile=$outdir/files-$datestamp.tar.gz
    instlist=$outdir/installed-$datestamp

    # backup new image in outdir
    /usr/bin/backup-mv $dumpfile $tarfile $instfile
}

restore_menu()
{
    dialog --backtitle "$backtitle" --title "Restore Method" \
        --menu "restore method" 10 61 2 \
        "Local Hard Drive" "" \
        "USB Key" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Local Hard Drive")
                    state=RESTORE_LOCAL
                    ;;
                "USB Key")
                    state=RESTORE_USB_MOUNT
                    ;;
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

backup_menu()
{
    dialog --backtitle "$backtitle" --title "Backup Method" \
        --menu "backup method" 10 61 2 \
        "Local Hard Drive" "" \
        "USB Key" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "USB Key")
                    state=BACKUP_USB_MOUNT
                    ;;
                "Local Hard Drive")
                    state=BACKUP_LOCAL
                    ;;
            esac
            ;;
        1) # Cancel
            state=MAIN_MENU
            ;;
    esac
}

main_menu()
{
    dialog --backtitle "$backtitle" --title "Backup and Restore" \
        --cancel-label "Exit" \
        --menu "Choose operation:" 10 61 2 \
        "Restore Settings" "" \
        "Backup Settings" "" \
        2>$tmpfile
    retval=$?

    choice=$(cat $tmpfile)
    case $retval in
        0) # OK
            case $choice in
                "Restore Settings" )
                    state=RESTORE_MENU
                    ;;
                "Backup Settings")
                    state=BACKUP_MENU
                    ;;
            esac
            ;;
        1) # Cancel
            state=CONFIRM_EXIT
            ;;
    esac
}

state=MAIN_MENU

while true; do
    case $state in
        MAIN_MENU)
            main_menu
            ;;
        BACKUP_MENU)
            backup_menu
            ;;
        BACKUP_USB_MOUNT)
            if usb_mount; then
                state=BACKUP_USB
            else
                state=BACKUP_MENU
            fi
            ;;
        BACKUP_USB)
            if backup /mnt; then
        dialog --backtitle "$backtitle" --title "Backup Successful" \
                    --msgbox "Settings backed up successfully." 6 52

                state=END_STATE
            else
                dialog --backtitle "$backtitle" --title "Backup Unsuccessful" \
                    --msgbox "Error backing up settings." 6 52

                state=BACKUP_MENU
            fi
            umount /mnt
            ;;
        BACKUP_LOCAL)
            if backup $LOCAL_DUMP; then
                dialog --backtitle "$backtitle" --title "Backup Successful" \
                    --msgbox "Settings backed up successfully." 6 52

                state=END_STATE
            else
                dialog --backtitle "$backtitle" --title "Backup Unsuccessful" \
                    --msgbox "Error backing up settings." 6 52

                state=BACKUP_MENU
            fi
            ;;
        RESTORE_MENU)
            restore_menu
            ;;
        RESTORE_USB_MOUNT)
            usb_mount
            case $? in
                0) # success
                    state=RESTORE_USB
                    ;;
                1) # cancel
                    state=RESTORE_MENU
                    ;;
            esac
            ;;
        RESTORE_USB)
            restore /mnt
            RET=$?

            echo "---" $RET

            if [ $RET -eq 0 ]; then
                dialog --backtitle "$backtitle" --title "Restore Successful" \
                    --msgbox "Settings restored successfully." 6 52

                state=END_STATE
            else
                # 100 means ignore error
                if [ ! $RET -eq 100 ] ; then
                    dialog --backtitle "$backtitle" --title "Restore Unsuccessful" \
                        --msgbox "Error restoring settings." 6 52
                fi
                state=RESTORE_MENU
            fi
            umount /mnt
            ;;
        RESTORE_LOCAL)
            restore $LOCAL_DUMP
            RET=$?

            if [ $RET -eq 0 ]; then
                dialog --backtitle "$backtitle" --title "Restore Successful" \
                    --msgbox "Settings restored successfully." 6 52

                state=END_STATE
            else
                # 100 means ignore error
                if [ ! $RET -eq 100 ] ; then
                    dialog --backtitle "$backtitle" --title "Restore Unsuccessful" \
                        --msgbox "Error restoring settings." 6 52
                fi
                state=RESTORE_MENU
            fi
            ;;
        CONFIRM_EXIT)
            confirm_exit
            ;;
        END_STATE)
            exit
            ;;
        *)
            echo "no such state: $state"
            exit
    esac
done
