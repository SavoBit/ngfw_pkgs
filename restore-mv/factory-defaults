#!/bin/sh

NAT_CACHE_DEB="/var/lib/mvvm/nat-transform.deb"

# restore database
dropdb -U postgres mvvm

su postgres -c "psql -U postgres -c 'ALTER USER metavize RENAME TO untangle' template1" &>/dev/null || true
su postgres -c "createuser --createdb --no-adduser untangle" 2>/dev/null
createdb -O untangle -U untangle mvvm
update-schema settings mvvm
update-schema events mvvm
update-schema settings nat-transform
update-schema events nat-transform
psql -U untangle mvvm <<EOF
INSERT INTO tid VALUES (1);
INSERT INTO transform_manager_state VALUES (nextval('hibernate_sequence'), 2);
INSERT INTO transform_persistent_state VALUES (nextval('hibernate_sequence'), 'nat-transform', 1, '\\\\001\\\\000', 'running');
INSERT INTO transform_preferences VALUES (nextval('hibernate_sequence'), 1, 255, 175, 175, 255);
INSERT INTO tid VALUES (2);
INSERT INTO transform_persistent_state VALUES (nextval('hibernate_sequence'), 'ftp-casing', 2, '\\\\002\\\\000', 'running');
INSERT INTO transform_preferences VALUES (nextval('hibernate_sequence'), 2, 255, 175, 175, 255);
INSERT INTO tr_nat_settings VALUES (nextval('hibernate_sequence'), 1, 0, true, null, null, false, null, true, null, null, 0, true, null, false);
EOF

# remove files
rm -f /usr/share/metavize/activation.key
rm -f /usr/share/metavize/conf/networking.sh
rm -f /usr/share/metavize/conf/timezone
rm -f /usr/share/metavize/conf/keystore
rm -rf /usr/share/metavize/conf/openvpn
rm -rf /usr/share/metavize/quarantine
rm -rf /etc/openvpn

# restore initial LDAP db
/etc/init.d/slapd stop
rm -rf /var/lib/ldap
mkdir /var/lib/ldap
cp /usr/share/metavize/conf/ldap.DB_CONFIG /var/lib/ldap/DB_CONFIG
slapadd -l /usr/share/metavize/conf/initial.ldif
slapindex
/etc/init.d/slapd start

# restore canonical files
(cd / && tar zvxf /usr/share/metavize/conf/canonical.tar.gz)

# restore factory root pw
echo "root:YKN4WuGxhHpIw" | /usr/sbin/chpasswd -e

## restore the NAT transform if necessary
if [ -f ${NAT_CACHE_DEB} ]; then
    dpkg -l nat-transform | grep '^ii' > /dev/null || dpkg -i ${NAT_CACHE_DEB}
fi
