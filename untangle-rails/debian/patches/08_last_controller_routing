#! /bin/sh /usr/share/dpatch/dpatch-run
## 03_anticolorize.dpatch by  <adamm@zombino.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Match the longest controller in path, not the shortest

@DPATCH@
Index: actionpack/lib/action_controller/routing.rb
===================================================================
--- a/actionpack/lib/action_controller/routing.rb	(revision 1373)
+++ b/actionpack/lib/action_controller/routing.rb	(working copy)
@@ -162,15 +162,21 @@
         # Find the controller given a list of path components.
         # Return the controller class and the unused path components.
         def eat_path_to_controller(path)
+          last_working_controller_class = nil
+          options = nil
+
           path.inject([Controllers, 1]) do |(mod, length), name|
             name = name.camelize
             return nil, nil unless /^[A-Z][_a-zA-Z\d]*$/ =~ name
             controller_name = name + "Controller"
-            return eval("mod::#{controller_name}"), path[length..-1] if mod.const_available? controller_name
-            return nil, nil unless mod.const_available? name
-            [mod.const_get(name), length + 1]
+            if mod.const_available? controller_name then
+              last_working_controller_class = eval "#{mod}::#{controller_name}"
+              options = path[length..-1]
+            end
+            return last_working_controller_class, options unless mod.const_available? name
+            [eval("#{mod}::#{name}"), length + 1]
           end
-          return nil, nil # Path ended, but no controller found.
+          return last_working_controller_class, options
         end
       
         def items=(path)
