#! /bin/sh

PG_CONF="`/usr/bin/find /etc/postgresql -name 'postgresql.conf' -type f`"
PG_HBA="`/usr/bin/find /etc/postgresql -name 'pg_hba.conf' -type f`"
PG_INIT="`/usr/bin/find /etc/init.d/ -name 'postgres*' -type f`"
UNTANGLE_SYSCTL="/etc/sysctl.d/60-untangle.conf"

echo "  Customizing HW-related settings for postgres"

MEM=$(awk '/MemTotal/ { print $2 }' < /proc/meminfo)
if [ $MEM -gt 1900000 ] ; then
    echo "    Using settings for 2 gigabytes of memory"
    SHARED_BUFFERS=10000
    SORT_MEM=32768
    VACUUM_MEM=131072
    EFFECTIVE_CACHE_SIZE=40000
    # Also in this case we need to adjust the shmmax in the kernel
    MAXLINE="kernel.shmmax=134217728"
    if [ -f ${UNTANGLE_SYSCTL} ] && grep -q kernel.shmmax ${UNTANGLE_SYSCTL} ; then
        sed -i -e "s|^.*kernel.shmmax.*|${MAXLINE}|" ${UNTANGLE_SYSCTL}
    else
        echo $MAXLINE >> ${UNTANGLE_SYSCTL}
    fi
    /sbin/sysctl -w $MAXLINE
elif [ $MEM -gt 900000 ] ; then
    echo "    Using settings for 1 gigabyte of memory"
    SHARED_BUFFERS=3000
    SORT_MEM=16384
    VACUUM_MEM=65536
    EFFECTIVE_CACHE_SIZE=9000
else
    echo "    Using settings for 512 megabytes of memory"
    SHARED_BUFFERS=2000
    SORT_MEM=4096
    VACUUM_MEM=32768
    EFFECTIVE_CACHE_SIZE=3000
fi

for file in $PG_CONF ; do
    # Tune memory usage & query optimizer
    sed -i -e "s/[# ]*shared_buffers *=.*/shared_buffers = ${SHARED_BUFFERS}/" $file
    sed -i -e "s/[# ]*sort_mem *=.*/sort_mem = ${SORT_MEM}/" $file
    sed -i -e "s/[# ]*vacuum_mem *=.*/vacuum_mem = ${VACUUM_MEM}/" $file
    sed -i -e "s/[# ]*effective_cache_size *=.*/effective_cache_size = ${EFFECTIVE_CACHE_SIZE}/" $file
    sed -i -e "s/[# ]*checkpoint_segments *=.*/checkpoint_segments = 12/" $file
done
