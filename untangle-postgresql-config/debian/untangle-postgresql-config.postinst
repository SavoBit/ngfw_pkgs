#! /bin/bash

ourInit() {
if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
  invoke-rc.d $1 $2
else
  /etc/init.d/$1 $2
fi
}

PG_VERSION_OLD="9.1"
PG_ETC_DIR_OLD="/etc/postgresql/${PG_VERSION_OLD}"
PG_MAIN_DIR_OLD="${PG_ETC_DIR_OLD}/main"
PG_CONF_OLD="${PG_MAIN_DIR_OLD}/postgresql.conf"
PG_BIN_DIR_OLD="/usr/lib/postgresql/${PG_VERSION_OLD}/bin"
PG_VAR_DIR_OLD="/var/lib/postgresql/${PG_VERSION_OLD}"

PG_VERSION="9.4"
PG_ETC_DIR="/etc/postgresql/${PG_VERSION}"
PG_MAIN_DIR="${PG_ETC_DIR}/main"
PG_CONF="${PG_MAIN_DIR}/postgresql.conf"
PG_HBA="${PG_MAIN_DIR}/pg_hba.conf"
PG_BIN_DIR="/usr/lib/postgresql/${PG_VERSION}/bin"
PG_VAR_DIR="/var/lib/postgresql/${PG_VERSION}"

createDB() {
  locale=${1:-"en_US.UTF-8"}
  echo -e "\n[`date +%Y-%m-%dT%H:%m`] Initializing database... locale '$locale'\n"
  ourInit postgresql stop
  rm -fr ${PG_VAR_DIR}
  mkdir -p ${PG_VAR_DIR}/main
  chown -R postgres:postgres ${PG_VAR_DIR}
  su -c "${PG_BIN_DIR}/initdb --encoding=utf8 --locale=${locale} -D ${PG_VAR_DIR}/main" postgres
}

if [ -z "$2" ] ; then
    # this is a new install
    
    # enable en_US.UTF-8
    sed -i -e "s/.*en_US.UTF-8 UTF-8.*/en_US.UTF-8 UTF-8/" /etc/locale.gen
    locale-gen

    # create en_US.UTF-8 regardless of system locale
    createDB "en_US.UTF-8"
elif [ -d $PG_VAR_DIR_OLD ] ; then
    # 12.0 conversion
    # migrate from $PG_VERSION_OLD to $PG_VERSION if necessary (See
    # #12692)
    echo -e "\n[`date +%Y-%m-%dT%H:%m`] Starting conversion\n"
    locale=$(psql -t -U postgres -c "select setting from pg_settings where name = 'lc_collate';" uvm | xargs )
    echo -e "\n[`date +%Y-%m-%dT%H:%m`] Old locale: $locale\n"
    # re-create cluster with older cluster's locale (#12847)
    createDB $locale
    cd /tmp && \
    su -c "${PG_BIN_DIR}/pg_upgrade \
       --link \
       -b $PG_BIN_DIR_OLD \
       -B $PG_BIN_DIR \
       -d ${PG_VAR_DIR_OLD}/main \
       -D ${PG_VAR_DIR}/main \
       -o ' -c config_file=${PG_ETC_DIR_OLD}/main/postgresql.conf' \
       -O ' -c config_file=${PG_ETC_DIR}/main/postgresql.conf'" postgres
    pg_dropcluster $PG_VERSION_OLD main
    rm -fr $PG_VAR_DIR_OLD
    echo -e "\n[`date +%Y-%m-%dT%H:%m`] Completed conversion\n"
elif [ ! -d "${PG_VAR_DIR}/main/base" ] ; then 
    # database does not exist for whatever reason, just create it

    # enable en_US.UTF-8
    sed -i -e "s/.*en_US.UTF-8 UTF-8.*/en_US.UTF-8 UTF-8/" /etc/locale.gen
    locale-gen

    # create en_US.UTF-8 regardless of system locale
    createDB "en_US.UTF-8"
fi

DATE=$(date '+%Y%m%d%H%M%S')

# backup original conf files
cp -f $PG_CONF ${PG_CONF}.$DATE
cp -f $PG_HBA ${PG_HBA}.$DATE

# configure pg_hba.conf
sed -i -e 's/peer$/trust/' $PG_HBA
sed -i -e "s/\#\(local.*all.*all.*trust\)/\1/" $PG_HBA
sed -i -e "s/\#\(host.*all.*all.*127.0.0.1.*255.255.255.255.*trust\)/\1/" $PG_HBA
sed -i -e 's/\(local.*all.*postgres.*\)\(ident.*\)/\1trust/'  $PG_HBA
sed -i -e 's/\(local.*all.*all.*\)\(ident.*\)/\1trust/'  $PG_HBA
sed -i -e 's/\(host.*all.*all.*127.0.0.1\(\/32\|[ \t]\).*\)\(md5\)/\1trust/'  $PG_HBA
sed -i -e 's/\(host.*all.*all.*::1\(\/128\|[ \t]\).*\)\(md5\)/\1trust/'  $PG_HBA

# configure postgresql.conf
# ... enable TCP from local host
sed -i -e "s/.*port.*=.*/port=5432/" $PG_CONF
sed -i -e "s/.*virtual_host.*=.*/virtual_host='127.0.0.1'/" $PG_CONF
sed -i -e "s/.*tcpip_socket.*=.*/tcpip_socket = true/" $PG_CONF
# ... turn of backslash warnings (Bug #7810)
sed -i -e "s/.*escape_string_warning.*=.*/escape_string_warning = off/" $PG_CONF
# ... Performance tuning
# ... http://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
# ... we can gain massive speedups in writes by turning off synchronous commits.
sed -i -e "s/.*synchronous_commit.*=.*/synchronous_commit = off/" $PG_CONF
# ... increase checkpoint_segments 
sed -i -e "s/.*checkpoint_segments.*=.*/checkpoint_segments = 32/" $PG_CONF
sed -i -e "s/.*autovacuum_max_workers.*=.*/autovacuum_max_workers = 1/" $PG_CONF
# ... log autovacuum
sed -i -e "s/.*log_autovacuum_min_duration.*=.*/log_autovacuum_min_duration = 0/" $PG_CONF
# ... decrease auto-vacuum since tables are now partitioned vacuuming
# is hardly required since rows are never removed only updated
sed -i -e "s/.*autovacuum_vacuum_scale_factor.*=.*/autovacuum_vacuum_scale_factor = 2/" $PG_CONF
# ... decrease auto-analyze 
sed -i -e "s/.*autovacuum_analyze_scale_factor.*=.*/autovacuum_analyze_scale_factor = .5/" $PG_CONF

# configure hw parameters
/etc/untangle/startup.d/10postgres

# restart postgres
ourInit postgresql restart

exit 0
