#! /bin/bash

ourInit() {
if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
  invoke-rc.d $1 $2
else
  /etc/init.d/$1 $2
fi
}

# 12.0 conversion
# migrate from 9.1 to 9.4 if necessary (See #12692)
if [ -d /var/lib/postgresql/9.1 ] ; then
    echo
    echo "[`date +%Y-%m%-dT%H:%m`] Starting conversion"
    echo
    ourInit postgresql stop && \
    cd /tmp && \
    su -c "/usr/lib/postgresql/9.4/bin/pg_upgrade \
       --link \
       -b /usr/lib/postgresql/9.1/bin \
       -B /usr/lib/postgresql/9.4/bin \
       -d /var/lib/postgresql/9.1/main \
       -D /var/lib/postgresql/9.4/main \
       -o ' -c config_file=/etc/postgresql/9.1/main/postgresql.conf' \
       -O ' -c config_file=/etc/postgresql/9.4/main/postgresql.conf'" postgres && \
    pg_dropcluster 9.1 main && \
    rm -fr /var/lib/postgresql/9.1
    echo
    echo "[`date +%Y-%m%-dT%H:%m`] Conversion complete"
    echo
    
fi

PG_CONF="`/usr/bin/find /etc/postgresql/9.4 -name 'postgresql.conf' -type f`"
PG_HBA="`/usr/bin/find /etc/postgresql/9.4 -name 'pg_hba.conf' -type f`"
DATE="`date '+%Y%m%d%H%M%S'`"

if [ -z "$PG_CONF" ] ; then
    echo "ERROR: Can't locate postgresql.conf"
    exit 0
fi
if [ -z "$PG_HBA" ] ; then
    echo "ERROR: Can't locate pg_hba.conf"
    exit 0
fi

# backup original conf files
for i in $PG_CONF ; do
    cp -f $i $i.$DATE
done
for i in $PG_HBA ; do
    cp -f $i  $i.$DATE
done

# configure pg_hba.conf
for file in $PG_HBA ; do
    sed -i -e 's/peer$/trust/' $file
    sed -i -e "s/\#\(local.*all.*all.*trust\)/\1/" $file
    sed -i -e "s/\#\(host.*all.*all.*127.0.0.1.*255.255.255.255.*trust\)/\1/" $file
    sed -i -e 's/\(local.*all.*postgres.*\)\(ident.*\)/\1trust/'  $file
    sed -i -e 's/\(local.*all.*all.*\)\(ident.*\)/\1trust/'  $file
    sed -i -e 's/\(host.*all.*all.*127.0.0.1\(\/32\|[ \t]\).*\)\(md5\)/\1trust/'  $file
    sed -i -e 's/\(host.*all.*all.*::1\(\/128\|[ \t]\).*\)\(md5\)/\1trust/'  $file
done

# configure postgresql.conf
for file in $PG_CONF ; do
    # enable TCP from local host
    sed -i -e "s/.*port.*=.*/port=5432/" $file
    sed -i -e "s/.*virtual_host.*=.*/virtual_host='127.0.0.1'/" $file
    sed -i -e "s/.*tcpip_socket.*=.*/tcpip_socket = true/" $file

    # turn of backslash warnings (Bug #7810)
    sed -i -e "s/.*escape_string_warning.*=.*/escape_string_warning = off/" $file

    # Performance tuning
    # http://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
    # we can gain massive speedups in writes by turning off synchronous commits.
    sed -i -e "s/.*synchronous_commit.*=.*/synchronous_commit = off/" $file
    # increase checkpoint_segments 
    sed -i -e "s/.*checkpoint_segments.*=.*/checkpoint_segments = 32/" $file
    sed -i -e "s/.*autovacuum_max_workers.*=.*/autovacuum_max_workers = 1/" $file

    # log autovacuum
    sed -i -e "s/.*log_autovacuum_min_duration.*=.*/log_autovacuum_min_duration = 0/" $file
    # decrease auto-vacuum since tables are now partitioned vacuuming is hardly required since rows are never removed only updated
    sed -i -e "s/.*autovacuum_vacuum_scale_factor.*=.*/autovacuum_vacuum_scale_factor = 2/" $file
    # decrease auto-analyze 
    sed -i -e "s/.*autovacuum_analyze_scale_factor.*=.*/autovacuum_analyze_scale_factor = .5/" $file

done

# configure hw parameters
/etc/untangle/startup.d/10postgres

# restart postgres
ourInit postgresql restart

exit 0
