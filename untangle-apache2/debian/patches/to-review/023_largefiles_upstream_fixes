--- build-tree.orig/apache2/srclib/apr/configure.in	2004-08-14 00:27:43.000000000 -0600
+++ build-tree/apache2/srclib/apr/configure.in	2004-08-14 00:29:08.000000000 -0600
@@ -1176,20 +1176,20 @@
 
 APR_CHECK_SIZEOF_EXTENDED([#include <sys/types.h>], ssize_t, 8)
 
-if test "$ac_cv_sizeof_ssize_t" = "$ac_cv_sizeof_int"; then
-    ssize_t_fmt='#define APR_SSIZE_T_FMT "d"'
-elif test "$ac_cv_sizeof_ssize_t" = "$ac_cv_sizeof_long"; then
+if test "$ac_cv_sizeof_ssize_t" = "$ac_cv_sizeof_long"; then
     ssize_t_fmt='#define APR_SSIZE_T_FMT "ld"'
+elif test "$ac_cv_sizeof_ssize_t" = "$ac_cv_sizeof_int"; then
+    ssize_t_fmt='#define APR_SSIZE_T_FMT "d"'
 else
     ssize_t_fmt='#error Can not determine the proper size for ssize_t'
 fi
 
 APR_CHECK_SIZEOF_EXTENDED([#include <stddef.h>], size_t, 8)
 
-if test "$ac_cv_sizeof_size_t" = "$ac_cv_sizeof_int"; then
-    size_t_fmt='#define APR_SIZE_T_FMT "d"'
-elif test "$ac_cv_sizeof_size_t" = "$ac_cv_sizeof_long"; then
+if test "$ac_cv_sizeof_size_t" = "$ac_cv_sizeof_long"; then
     size_t_fmt='#define APR_SIZE_T_FMT "ld"'
+elif test "$ac_cv_sizeof_size_t" = "$ac_cv_sizeof_int"; then
+    size_t_fmt='#define APR_SIZE_T_FMT "d"'
 else
     size_t_fmt='#error Can not determine the proper size for size_t'
 fi
@@ -1228,10 +1228,10 @@
 
 if test "$ac_cv_sizeof_pid_t" = "$ac_cv_sizeof_short"; then
     pid_t_fmt='#define APR_PID_T_FMT "hd"'
-elif test "$ac_cv_sizeof_pid_t" = "$ac_cv_sizeof_int"; then
-    pid_t_fmt='#define APR_PID_T_FMT "d"'
 elif test "$ac_cv_sizeof_pid_t" = "$ac_cv_sizeof_long"; then
     pid_t_fmt='#define APR_PID_T_FMT "ld"'
+elif test "$ac_cv_sizeof_pid_t" = "$ac_cv_sizeof_int"; then
+    pid_t_fmt='#define APR_PID_T_FMT "d"'
 elif test "$ac_cv_sizeof_pid_t" = "$ac_cv_sizeof_long_long"; then
     pid_t_fmt='#define APR_PID_T_FMT APR_INT64_T_FMT'
 else
--- build-tree.orig/apache2/srclib/apr/network_io/unix/sendrecv.c	2004-02-13 02:33:51.000000000 -0700
+++ build-tree.orig/apache2/srclib/apr/network_io/unix/sendrecv.c	2004-08-14 02:28:51.000000000 -0600
@@ -244,7 +244,7 @@
                                  apr_hdtr_t *hdtr, apr_off_t *offset,
                                  apr_size_t *len, apr_int32_t flags)
 {
-    off_t off = *offset;
+    apr_off_t off = *offset;
     int rv, nbytes = 0, total_hdrbytes, i;
     apr_status_t arv;
 
@@ -427,7 +427,7 @@
                                  apr_hdtr_t * hdtr, apr_off_t * offset,
                                  apr_size_t * len, apr_int32_t flags)
 {
-    off_t nbytes = 0;
+    apr_off_t nbytes = 0;
     int rv, i;
     struct sf_hdtr headerstruct;
     apr_size_t bytes_to_send = *len;
@@ -869,7 +869,7 @@
     for (i = 0; i < hdtr->numheaders; i++, curvec++) {
         sfv[curvec].sfv_fd = SFV_FD_SELF;
         sfv[curvec].sfv_flag = 0;
-        sfv[curvec].sfv_off = (off_t)hdtr->headers[i].iov_base;
+        sfv[curvec].sfv_off = (apr_off_t)hdtr->headers[i].iov_base;
         sfv[curvec].sfv_len = hdtr->headers[i].iov_len;
         requested_len += sfv[curvec].sfv_len;
     }
@@ -893,7 +893,7 @@
     for (i = 0; i < hdtr->numtrailers; i++, curvec++) {
         sfv[curvec].sfv_fd = SFV_FD_SELF;
         sfv[curvec].sfv_flag = 0;
-        sfv[curvec].sfv_off = (off_t)hdtr->trailers[i].iov_base;
+        sfv[curvec].sfv_off = (apr_off_t)hdtr->trailers[i].iov_base;
         sfv[curvec].sfv_len = hdtr->trailers[i].iov_len;
         requested_len += sfv[curvec].sfv_len;
     }

--- build-tree/apache2/server/protocol.c.orig	2004-08-14 05:19:58.000000000 -0600
+++ build-tree/apache2/server/protocol.c	2004-08-14 05:14:37.000000000 -0600
@@ -1285,7 +1285,7 @@
 
 #if APR_HAS_MMAP
 /* send data from an in-memory buffer */
-AP_DECLARE(size_t) ap_send_mmap(apr_mmap_t *mm, request_rec *r, size_t offset,
+AP_DECLARE(size_t) ap_send_mmap(apr_mmap_t *mm, request_rec *r, apr_off_t offset,
                                 size_t length)
 {
     conn_rec *c = r->connection;

--- build-tree/apache2/include/http_protocol.h.orig	2004-08-14 05:10:27.000000000 -0600
+++ build-tree/apache2/include/http_protocol.h	2004-08-14 05:12:16.000000000 -0600
@@ -215,9 +215,9 @@
  * @param offset The offset into the MMAP to start sending
  * @param length The amount of data to send
  * @return The number of bytes sent
- * @deffunc size_t ap_send_mmap(apr_mmap_t *mm, request_rec *r, size_t offset, size_t length)
+ * @deffunc size_t ap_send_mmap(apr_mmap_t *mm, request_rec *r, apr_off_t offset, size_t length)
  */
-AP_DECLARE(size_t) ap_send_mmap(apr_mmap_t *mm, request_rec *r, size_t offset,
+AP_DECLARE(size_t) ap_send_mmap(apr_mmap_t *mm, request_rec *r, apr_off_t offset,
                              size_t length);
 #endif
 

--- build-tree/apache2/modules/experimental/mod_disk_cache.c.orig	2004-08-14 05:17:23.000000000 -0600
+++ build-tree/apache2/modules/experimental/mod_disk_cache.c	2004-08-14 05:17:42.000000000 -0600
@@ -57,7 +57,7 @@
 typedef struct {
     const char* cache_root;
     apr_size_t cache_root_len;
-    off_t space;                 /* Maximum cache size (in 1024 bytes) */
+    apr_off_t space;             /* Maximum cache size (in 1024 bytes) */
     apr_time_t maxexpire;        /* Maximum time to keep cached files in msecs */
     apr_time_t defaultexpire;    /* default time to keep cached file in msecs */
     double lmfactor;             /* factor for estimating expires date */
