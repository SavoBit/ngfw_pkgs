#!/bin/dash

#
# This script handles all the iptables rules
# It runs all the scripts in /etc/untangle-net-alpaca/iptables.rules.d
# 

mkdir -p /var/log/untangle-net-alpaca
exec >> /var/log/untangle-net-alpaca/iptables.log 2>&1

IPTABLES_DIRECTORY=/etc/untangle-net-alpaca/iptables-rules.d

IPTABLES=/sbin/iptables
#IPTABLES="iptables_debug"
IPTABLES=iptables_debug_onerror

EBTABLES=/sbin/ebtables
# EBTABLES=ebtables_debug


iptables_debug()
{
   echo "[`date`] /sbin/iptables $*"
   /sbin/iptables $*
}

iptables_debug_onerror()
{
    ## Ignore -N errors
    /sbin/iptables $* || {
        [ "${3}x" != "-Nx" ] && echo "[`date`] Failed: /sbin/iptables $*"
    }

    true
}


ebtables_debug()
{
    echo "[`date`] /sbin/ebtables $*"
    /sbin/ebtables $*
}

get_ip_addresses()
{
    local t_intf=$1

    if [ -z "${t_intf}" ]; then return; fi

    ## Throw away error data.
    ip -f inet addr show ${t_intf} 2>/dev/null | \
        awk '/inet/ { ip = $2 ; sub( /\/.*$/, "", ip ) ; print ip  }'
}

run_iptables_scripts()
{
    local t_script
    local t_ran_script=""

    if [ ! -d ${IPTABLES_DIRECTORY} ]; then
        echo "[`date`] ${IPTABLES_DIRECTORY} does not exist."
        return 0
    fi
    
    ## Would use run-parts, but that doesn't maintain environment variables 
    ## or the iptables_debug function.

    ## Do not run any of the dpkg backup files.
    for t_script in `run-parts --list --lsbsysinit ${IPTABLES_DIRECTORY} | sort` ; do
        echo "[`date`] ${t_script} Running ..."
        . ${t_script}
        echo "[`date`] ${t_script} Complete: $?"
        t_ran_script="true"
    done
    
    if [ "${t_ran_script}x" != "truex" ]; then
        echo "[`date`] ${IPTABLES_DIRECTORY} is empty."
    fi
}


echo "[`date`] Complete" > /dev/null

run_iptables_scripts

echo "[`date`] Complete" > /dev/null
