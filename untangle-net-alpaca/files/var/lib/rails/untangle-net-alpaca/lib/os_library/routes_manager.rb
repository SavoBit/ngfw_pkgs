#
# $HeadURL$
# Copyright (c) 2007-2008 Untangle, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
# NONINFRINGEMENT.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
class OSLibrary::RoutesManager < Alpaca::OS::ManagerBase
  include Singleton

  Service = "/etc/init.d/networking"
  ConfigFile = "/etc/untangle-net-alpaca/routes"

  def get_active
    results = []
    netstat = `netstat -rn | grep -v dummy0`.split( "\n" )
    number_of_heading_lines = 2
    netstat = netstat.slice( number_of_heading_lines, netstat.length )
    netstat.each do |entry|
      items = entry.split
      g = ActiveRoute.new
      g.target = items[0]
      if OSLibrary::NetworkManager::NETMASK_TO_CIDR.key?( items[2] )
        g.netmask = OSLibrary::NetworkManager::NETMASK_TO_CIDR[items[2]] + " (" + items[2] + ")"
      else
        g.netmask = items[2]
      end
      
      g.gateway = items[1]
      g.description = ""
      g.interface = items[7]
      results << g
    end
    return results
  end

  def register_hooks
    os["network_manager"].register_hook( -100, "routes_manager", "write_files", :hook_write_files )
  end
  
  def hook_commit
    write_files
    run_services
  end

  def hook_write_files
    network_routes = NetworkRoute.find( :all )
    
    cfg = []

    network_routes.each do |network_route|
      cfg << "route add -net " + network_route.target + " netmask " + network_route.netmask + " gw " + network_route.gateway 
      #+ " # " + network_route.name
    end
    
    os["override_manager"].write_file( ConfigFile, header, "\n", cfg.join( "\n" ), "\n" )
  end

  def hook_run_services
    ## Restart networking
    raise "Unable to reconfigure network and route settings." unless run_command( "sh #{Service} restart" ) == 0
  end

  def header
    <<EOF
#!/bin/bash
## #{Time.new}
## Auto Generated by the Untangle Net Alpaca
## If you modify this file manually, your changes
## may be overriden
EOF
  end
end
