## REVIEW : This is not legit
require_dependency "os_library/debian/network_manager"

class OSLibrary::Debian::DhcpManager < OSLibrary::DhcpManager
  include Singleton
  
  ConfigDir = "/etc/untangle-net-alpaca"
  ConfigFileBase = "dhcp-overrides."

  OverrideIPAddress = "DHCP_IP_ADDRESS"
  OverrideNetmask = "DHCP_IP_NETMASK"
  OverrideGateway = "DHCP_GATEWAY"
  OverrideDnsServer = "DHCP_DNS_SERVERS"
  OverrideDomainName = "DHCP_DOMAIN_NAME"
  
  def commit
    ## Delete all of the existing config files
    delete_config_files

    ## Write out all of the config files
    write_config_files
  end

  private
  ## Delete all of the config files, this guarantees there
  ## are no leftover configuration files when an interface goes from Dynamic -> Static
  def delete_config_files
    Dir.foreach( ConfigDir ) do |file_name|
      next if file_name.match( /^#{ConfigFileBase}/ ).nil?
      
      ## Review : This is a bit verbose, and it has DebianSarge hardcoded
      overrideManager = OSLibrary.getOS( "DebianSarge" ).manager( "override_manager" )
      overrideManager.rm_file( "#{ConfigDir}/#{file_name}" )
    end
  end

  def write_config_files
    Interface.find( :all ).each do |interface|
      config = interface.current_config
      
      ## Ignore anything that is not dynamic
      next unless config.is_a?( IntfDynamic )
      
      ## Don't like this code living in multiple places
      name = interface.os_name
      name = OSLibrary::Debian::NetworkManager.bridge_name( interface ) if interface.is_bridge?
      
      cfg = []

      ## REVIEW how to handle search domain
      ## [ OverrideDomainName, [ config.dns_1, config.dns_2 ].join( " " ).strip ]]

      gateway, dns = "ignore", "ignore"
      if interface.wan
        ## Only set the DNS and Gateway for WAN interfaces.
        gateway = config.default_gateway
        dns = [ config.dns_1, config.dns_2 ].join( " " ).strip 
      end

      ## Review : This is a bit verbose, and it has DebianSarge hardcoded
      overrideManager = OSLibrary.getOS( "DebianSarge" ).manager( "override_manager" )    

      ## Review : should this ignore the entry, because it isn't actually under the control
      ## of the net-alpaca.
      unless overrideManager.writeable?( OSLibrary::Debian::DnsServerManager::ResolvConfFile )
        ## Always ignore the DNS update if resolv.conf shouldn't be updated.
        dns = "ignore"
      end
      
      [[ OverrideIPAddress, config.ip ],
       [ OverrideNetmask, config.netmask ], 
       [ OverrideGateway, gateway ],
       [ OverrideDnsServer, dns ]].each do |var,val|
        next if ( val.nil? || val.empty? || val == "null" )
        cfg << "#{var}=\"#{val}\""
      end
      
      next if cfg.size == 0
      
      file_name = "#{ConfigDir}/#{ConfigFileBase}#{name}"

      ## Review : This is a bit verbose, and it has DebianSarge hardcoded
      overrideManager = OSLibrary.getOS( "DebianSarge" ).manager( "override_manager" )    
      overrideManager.write_file( file_name, header, "\n", cfg.join( "\n" ), "\n" )
    end
  end

  def header
    <<EOF
#!/bin/dash

## #{Time.new}
## Auto Generated by the Untangle Net Alpaca
## If you modify this file manually, your changes
## may be overriden
EOF
  end
end
