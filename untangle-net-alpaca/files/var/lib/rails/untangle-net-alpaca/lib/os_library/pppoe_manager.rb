class OSLibrary::PppoeManager < Alpaca::OS::ManagerBase
  include Singleton

  ConnectionNamePrefix = "connection-"
  PeersFilePrefix = "/etc/ppp/peers/" + ConnectionNamePrefix
  PapSecretsFile = "/etc/ppp/pap-secrets"

  def register_hooks
    os["network_manager"].register_hook( -100, "pppoe_manager", "write_files", :hook_commit )
  end
  
  def hook_commit
    settings = IntfPppoe.find( :first )
    if ( settings.nil? )
    end
    
    cfg = []
    secrets = []
   

    cfg << "noipdefault"
    cfg << "hide-password"
    cfg << "noauth"
    cfg << "persist"
    cfg << "defaultroute"
    cfg << "replacedefaultroute"
    if ( settings.use_peer_dns )
      cfg << "usepeerdns"
    end
    
    conditions = [ "wan=?", true ]
    wanInterface = Interface.find( :first, :conditions => conditions )
    #logger.debug("settings.service is: " + settings.service)
    protocol = ConfigService[settings.service][0]
    server = ConfigService[settings.service][1]
    [ [ ConfigPid, PppoePidFile ],
      [ ConfigUse, "if, if=" + wanInterface.os_name ],
      [ ConfigProtocol, protocol ],
      [ ConfigLogin, settings.login ],
      [ ConfigPassword, settings.password ],
      [ ConfigServer, server + '" "' +settings.hostname ]
    ].each do |var,val|
      next if ( val.nil? || val == "null" )
      cfg << "#{var}=\"#{val}\""
    end
    
    [ [ ConfigDaemon, ConfigDaemonInterval ],
      [ ConfigRunDaemon, settings.enabled ]
    ].each do |var,val|
      next if ( val.nil? || val == "null" )
      secrets << "#{var}=\"#{val}\""
    end
    
  
  
    #os["override_manager"].write_file( ConfigFile, header, "\n", cfg.join( "\n" ), "\n" )
    #os["override_manager"].write_file( PppoeDefaultFile, header, "\n", defaults.join( "\n" ), "\n" )
  end
  
  def header
    <<EOF
## #{Time.new}
## Auto Generated by the Untangle Net Alpaca
## If you modify this file manually, your changes
## may be overriden
EOF
  end
end
