<%

config_type_id = config.interface.config_type
config_types = config.config_types

# nice way to prevent caching
panel_id = "interface_#{rand( 0x100000000 )}"

panel_class = "basic-interface-config"
panel_class += " wan" if ( config.interface.wan )

%>
<div class="<%= panel_class %>">
  <%= hidden_field_tag( "interface_list[]", panel_id ) %>
  <%= hidden_field_tag( "interface_id_list[]", config.interface.id ) %>
    
  <h3><%= 'Configuration for the %s Interface'.t / config.interface.name %></h3>
  
  <div>
    <label for="<%= "config_type_#{panel_id}" %>"><%= "Config Type".t %></label>
    <%= select_tag( "config_type_#{panel_id}", options_for_select( config_types, config_type_id )) %>
    <%= observe_field( "config_type_#{panel_id}", { :function => "Network.setConfigType( '#{panel_id}' )" } ) %>
  </div>

  <div id="<%= panel_id %>">
    <% config_types.each do |type,type| %>
      <div id="<%= "#{panel_id}_#{type}" %>" style="display: none">
        <%= render( :partial => "#{type}", 
                    :locals => { :config => config, :config_id => "#{panel_id}_#{type}" } ) %>
      </div>
    <% end %>
    <% if ( config.interface.wan ) %>
      <%= submit_to_remote( "External Aliases", "External Aliases".t, options = { :url => { :action => :aliases }, :update => "main-content", :html => { :class => "test-connectivity" } } ) %>
    <% end %>
  </div>

</div>

<%= javascript_tag <<EOF
Network.setConfigType( '#{panel_id}' )
EOF
%>