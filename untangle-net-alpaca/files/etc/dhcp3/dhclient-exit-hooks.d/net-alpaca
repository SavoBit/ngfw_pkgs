#! /bin/bash

ADD_UPLINK_SCRIPT="/usr/share/untangle-net-alpaca/scripts/add-uplink"

mkdir -p /var/log/untangle-net-alpaca/

exec >> /var/log/untangle-net-alpaca/dhcp.log 2>&1

echo "[`date`] dhclient-exit-hooks.d/net-alpaca [reason: \"$reason\" old_ip_address: \"$old_ip_address\" new_ip_address: \"$new_ip_address\"]"

refresh_routes()
{
    # point to point
	if [ "$new_subnet_mask" == "255.255.255.255" ]; then
	    for router in $alpaca_new_routers; do
	    	route add -host $router dev $interface
	    done
	fi
    
    for router in $alpaca_new_routers; do
        if [ -x "${ADD_UPLINK_SCRIPT}" ] ; then 
            ${ADD_UPLINK_SCRIPT} ${interface} ${router} "uplink.${DHCP_UPLINK_INDEX}"
        fi
    done
}

restart_networking()
{
    run-parts /etc/untangle-net-alpaca/update-address.d
}

# Execute the operation
case "$reason" in

    MEDIUM|ARPCHECK|ARPSEND)
        # Do nothing
        ;;

    PREINIT)
        # Do nothing
        ;;

    BOUND|REBOOT)
        refresh_routes
        restart_networking
        ;;

    RENEW|REBIND)
        if [ "$old_ip_address" != "$new_ip_address" ]; then
            refresh_routes
            restart_networking
        fi
        ;;

    EXPIRE|FAIL|RELEASE|STOP)
        restart_networking
        ;;

    TIMEOUT)
        set -- $alpaca_new_routers
        first_router="$1"

        if [ -z "$first_router" ] || ping -q -c 1 $first_router; then
            if [ "$new_ip_address" != "$alias_ip_address" -a -n "$alias_ip_address" ]; then
                ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
                route add -host $alias_ip_address dev $interface:0
            fi
	    
            for router in $alpaca_new_routers; do
                if [ -x "${ADD_UPLINK_SCRIPT}" ] ; then
                    ${ADD_UPLINK_SCRIPT} ${interface} ${router} "uplink.${DHCP_UPLINK_INDEX}"
                fi
            done

            make_resolv_conf
        else
            # Changed from 'ifconfig $interface inet 0 down' - see Debian bug #144666
            ifconfig $interface inet 0
            exit_with_hooks 2 "$@"
        fi

        restart_networking
        ;;

esac

true

