#! /bin/dash

### BEGIN INIT INFO
# Provides:          untangle-net-alpaca
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Untangle Network Alpaca
### END INIT INFO

# Author: Robert Scott <rbscott@untangle.com>

. /lib/lsb/init-functions

if [ -f @PREFIX@/etc/untangle/oem/oem.sh ] ; then
    source @PREFIX@/etc/untangle/oem/oem.sh
else
    OEM_NAME="Untangle"
fi

NAME="untangle-net-alpaca"
DESC="${OEM_NAME} Net-Alpaca"

MONGREL_RAILS="/usr/bin/mongrel_rails"
BASE_DIR="/var/lib/rails/untangle-net-alpaca"
MONGREL_PID_FILE="/var/run/untangle-net-alpaca/mongrel.pid"
MONGREL_ARGS=""

BIND_ADDRESS="127.0.0.1"
## rails environment, defaults to production
MONGREL_ENV="production"

MONGREL_LOG_FILE="/var/log/untangle-net-alpaca/mongrel.log"

mkdir -p /var/log/untangle-net-alpaca/
mkdir -p /var/run/untangle-net-alpaca/

if [ -r /etc/default/$NAME ]; then
    . /etc/default/$NAME
fi

## Just to guarantee that at least one nonce exist
/etc/cron.hourly/rebuild-nonce

sanitycheck() {
  [ -f "${MONGREL_PID_FILE}" ] && [ ! -d /proc/`cat "${MONGREL_PID_FILE}"` ] && rm -f "${MONGREL_PID_FILE}" 
}

start()
{
    log_daemon_msg "Starting $DESC"

    cd "${BASE_DIR}" || {
        log_failure_msg "${NAME} could not change into the directory '${BASE_DIR}'" 
        log_end_msg -1
        exit -1
    }

    ## Load the latest version of the schema
    rake -s alpaca:init -s RAILS_ENV=${MONGREL_ENV} >> ${MONGREL_LOG_FILE} 2>&1 || { 
        log_failure_msg "${NAME} could not load database schema '${BASE_DIR}'"
        log_end_msg -2
        exit -2
    }

    ## If the bind address is set, then tell mongrel to bind to that address.
    if [ -n "${BIND_ADDRESS}" ] ; then
        MONGREL_ARGS=" ${MONGREL_ARGS} -a ${BIND_ADDRESS} "
    fi
    
    ## The root handler is used to automatically redirect requests to /.
    ${MONGREL_RAILS} start -S ${BASE_DIR}/root-handler.conf -c ${BASE_DIR} -e ${MONGREL_ENV} \
        ${MONGREL_ARGS} --prefix "/alpaca" -d -l "${MONGREL_LOG_FILE}" --pid "${MONGREL_PID_FILE}"

    log_end_msg $?
}

stop()
{
    log_daemon_msg "Stopping $DESC"

    ## Check if the PID file exists, mongrel_rails doesn't handle this case well if it doesn't exist
    [ -f "${MONGREL_PID_FILE}" ] && ${MONGREL_RAILS} stop -w 5 -c "${BASE_DIR}" --pid "${MONGREL_PID_FILE}"

    pkill mongrel > /dev/null 2>&1
    pkill -9 mongrel > /dev/null 2>&1
    ## Remove the pid file.
    rm -f "${MONGREL_PID_FILE}"

    log_end_msg $?
}

case "$1" in
    start)
        sanitycheck
        start
        ;;
    stop)
        stop
        ;;
    reload|restart|force-reload)
        stop
        start
        ;;
    *)
        /bin/echo "Usage: $0 {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
