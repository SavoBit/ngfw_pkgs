#! /bin/sh

#set -e

install_kernel_module()
{
    local t_version
    t_version=$1
    
    if [ -z "${t_version}" ]; then
        echo "WARN: version string is empty"
        return 0
    fi

    if [ ! -d "/lib/modules/${t_version}" ]; then
        ## This is normal, this package installs amd64, 486 and 686 modules
        echo "DEBUG: Kernel ${t_version} is not installed."
        return 0
    fi

    if [ -z "`find /usr/share/untangle-tangent-kernel/$t_version -name '*.ko' -type f`" ]; then
        echo "There are no modules for this kernel."
        return 0
    fi
        
    mkdir -p /lib/modules/${t_version}/extra
    cp -f /usr/share/untangle-tangent-kernel/${t_version}/*.ko /lib/modules/${t_version}/extra
    
    ## Running depmod for this kernel.  During the install, the kernel that is running
    ## is different then the kernel that gets installed.
    echo "DEBUG: Running 'depmod -a ${t_version}'"
    depmod -a ${t_version}
}


## Rather than unloading the module, just remove the existing one and
## install the new one.  Removing the module will bring down the
## interface and probably cause a problem with whatever else is going
## on.

# unload existing module if it is loaded
#if lsmod | grep -q igb ; then
#  rmmod igb
#fi

## Iterate all of the kernels and copy them in.
for t in /usr/share/untangle-tangent-kernel/* ; do
    kernel_version="`basename $t`"

    ## Remove the old igb kernel module
    rm -f /lib/modules/${kernel_version}/kernel/drivers/net/igb/igb.ko
    
    install_kernel_module ${kernel_version}
done

exit 0
