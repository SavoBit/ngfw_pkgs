#!/bin/bash

SERVICE=${DPKG_MAINTSCRIPT_PACKAGE}

ourInit() {
if [ -x /usr/sbin/invoke-rc.d ] && [ ! "`readlink /usr/sbin/invoke-rc.d`" = /bin/true ] ; then
  invoke-rc.d $1 $2
else
  /etc/init.d/$1 $2
fi
}

if [ -x "/etc/init.d/${SERVICE}" ]; then
  update-rc.d ${SERVICE} defaults 10 >/dev/null # early on
  ourInit ${SERVICE} restart
fi

# Swap eth1 and eth2 so order is correct on faceplate
# Do this only on new install of this package
if [ -z "$2" ] ; then
    declare -a from=(eth0 eth1 eth2 eth3)
    declare -a   to=(eth0 eth2 eth1 eth3)

    # and for each element, map to a temporary interface named new_ethx
    udev_file='/etc/udev/rules.d/70-persistent-net.rules';
    for (( i = 0 ; i < ${#from[@]} ; i++ )); do
        echo "Moving interface ${from[$i]} to ${to[$i]}"
        perl -i -pe "s/NAME\=\"${from[$i]}\"/NAME\=\"new_${to[$i]}\"/g" $udev_file
    done
    # then remove all the "new_".  We do the intermeidate step to avoid renaming collisions
    perl -i -pe "s/new_//g" $udev_file 
fi

exit 0
